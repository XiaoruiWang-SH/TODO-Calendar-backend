
services:
  app:
    build: .
    ports:
      - "${APP_PORT:-8081}:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=${ENV:-dev}
      - JVM_OPTS=${JVM_OPTS:-"-Xmx512m -Xms256m"}
      - MYSQL_HOST=${APP_MYSQL_HOST:-localhost}
      - MYSQL_PORT=${APP_MYSQL_PORT:-3306}
      - MYSQL_DATABASE=${APP_MYSQL_DATABASE:-fake_db}
      - MYSQL_USER=${APP_MYSQL_USER:-fake_user}
      - MYSQL_PASSWORD=${APP_MYSQL_PASSWORD:-fake_password}
    deploy:
      resources:
        limits:
          cpus: '0.5'  # Limit to 0.5 CPU cores
          memory: 512M # Limit to 512MB RAM
        reservations:
          cpus: '0.2'  # Reserve 0.2 CPU cores
          memory: 256M # Reserve 256MB RAM
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - todo-network

  mysql:
    image: mysql:8.0
    ports:
      - "${MYSQL_PORT:-3307}:3306"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE:-fake_db}
      - MYSQL_USER=${MYSQL_USER:-fake_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-fake_password}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-fake_password}
    deploy:
      resources:
        limits:
          cpus: '0.5'  # Limit to 0.5 CPU cores
          memory: 512M # Limit to 512MB RAM
        reservations:
          cpus: '0.2'  # Reserve 0.2 CPU cores
          memory: 256M # Reserve 256MB RAM
    volumes:
      - /var/lib/mysql/dev_mysql_data:/var/lib/mysql
      - ./init_dev.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - todo-network
    healthcheck:  # 添加健康检查
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 10

networks:
  todo-network:
    driver: bridge


